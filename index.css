:root {
  --light-bg: #f8f9fa; /* Lighter grey for light mode */
  --dark-bg: #202124;  /* Google dark grey */
  --light-surface: #ffffff;
  --dark-surface: #2d2e30; /* Slightly lighter dark surface */
  --light-text-primary: #202124;
  --dark-text-primary: #e8eaed; /* Google dark mode text */
  --light-text-secondary: #5f6368;
  --dark-text-secondary: #bdc1c6; /* Google dark mode secondary text */
  --light-primary: #1a73e8; /* Google Blue */
  --dark-primary: #8ab4f8; /* Lighter Google Blue for dark mode */
  --light-primary-hover: #185abc;
  --dark-primary-hover: #aecbfa;
  --light-secondary-bg: #e8eaed;
  --dark-secondary-bg: #3c4043;
  --light-secondary-hover-bg: #dadce0;
  --dark-secondary-hover-bg: #5f6368;
  --light-secondary-text: #3c4042;
  --dark-secondary-text: #e8eaed;
  --light-border: #dadce0;
  --dark-border: #5f6368;
  --light-error: #d93025;
  --dark-error: #f28b82;
  --light-card-bg: #e8f0fe; /* Light blue background for cards */
  --dark-card-bg: #3c4043; /* Darker grey for cards */
  --light-disabled-bg: #e0e0e0;
  --dark-disabled-bg: #3c4043;
  --light-disabled-text: #a0a0a0;
  --dark-disabled-text: #7f8184;
  --light-shadow-color-1: rgba(60, 64, 67, 0.15);
  --dark-shadow-color-1: rgba(0, 0, 0, 0.3);
  --light-shadow-color-2: rgba(60, 64, 67, 0.1);
  --dark-shadow-color-2: rgba(0, 0, 0, 0.2);
   --light-focus-shadow-color: rgba(26, 115, 232, 0.2);
  --dark-focus-shadow-color: rgba(138, 180, 248, 0.3);
  --light-button-focus-shadow-color: rgba(26, 115, 232, 0.3);
  --dark-button-focus-shadow-color: rgba(138, 180, 248, 0.4);
  --light-button-text: white;
  --dark-button-text: var(--dark-bg); /* Use dark background for text on light blue */
  --flashcard-width: 220px;
  --flashcard-height: 150px; /* Make height consistent */
}

body {
  font-family: 'Google Sans', Roboto, Arial, sans-serif;
  margin: 0;
  background-color: light-dark(var(--light-bg), var(--dark-bg));
  color: light-dark(var(--light-text-primary), var(--dark-text-primary));
  display: flex;
  justify-content: center;
  align-items: flex-start;
  min-height: 100vh;
  padding: 20px;
  box-sizing: border-box;
}

.container {
  background-color: light-dark(var(--light-surface), var(--dark-surface));
  padding: 40px;
  border-radius: 12px;
  box-shadow: 0 1px 3px light-dark(var(--light-shadow-color-1), var(--dark-shadow-color-1)),
              0 4px 8px light-dark(var(--light-shadow-color-2), var(--dark-shadow-color-2));
  width: 90%;
  max-width: 800px;
  text-align: center;
  margin-top: 20px;
}

h1 {
  color: light-dark(var(--light-primary), var(--dark-primary));
  margin-bottom: 15px;
  font-size: 2em;
  font-weight: 500;
}

#heroImage {
  width: 100%;
  height: auto;
  border-radius: 12px; /* Match the SVG's border radius */
  margin-top: 5px;
  margin-bottom: 20px;
}

p {
  margin-bottom: 25px;
  color: light-dark(var(--light-text-secondary), var(--dark-text-secondary));
  line-height: 1.6;
}

.controls {
  display: flex;
  flex-direction: column;
  gap: 20px;
  margin-bottom: 25px;
}

.button-container {
  display: flex;
  justify-content: center;
  gap: 15px;
  flex-wrap: wrap;
}

textarea {
  width: calc(100% - 32px);
  padding: 15px;
  border: 1px solid light-dark(var(--light-border), var(--dark-border));
  border-radius: 8px;
  font-size: 16px;
  min-height: 120px;
  background-color: light-dark(var(--light-bg), var(--dark-card-bg)); /* Use darker card bg for dark text area */
  color: light-dark(var(--light-text-primary), var(--dark-text-primary));
  resize: vertical;
  transition: border-color 0.3s ease, box-shadow 0.3s ease;
}

textarea:focus {
  outline: none;
  border-color: light-dark(var(--light-primary), var(--dark-primary));
  box-shadow: 0 0 0 2px light-dark(var(--light-focus-shadow-color), var(--dark-focus-shadow-color));
}

button {
  background-color: light-dark(var(--light-primary), var(--dark-primary));
  color: light-dark(var(--light-button-text), var(--dark-button-text));
  padding: 14px 24px;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  font-size: 16px;
  font-weight: 500;
  transition: background-color 0.3s ease, box-shadow 0.2s ease;
  box-shadow: 0 1px 2px light-dark(var(--light-shadow-color-2), var(--dark-shadow-color-2));
}

button.button-secondary {
  background-color: light-dark(var(--light-secondary-bg), var(--dark-secondary-bg));
  color: light-dark(var(--light-secondary-text), var(--dark-secondary-text));
}

button:hover {
  background-color: light-dark(var(--light-primary-hover), var(--dark-primary-hover));
  box-shadow: 0 1px 3px light-dark(var(--light-shadow-color-1), var(--dark-shadow-color-1));
}

button.button-secondary:hover {
  background-color: light-dark(var(--light-secondary-hover-bg), var(--dark-secondary-hover-bg));
}

button:focus {
  outline: none;
  box-shadow: 0 0 0 3px light-dark(var(--light-button-focus-shadow-color), var(--dark-button-focus-shadow-color));
}

button:disabled {
  background-color: light-dark(var(--light-disabled-bg), var(--dark-disabled-bg));
  color: light-dark(var(--light-disabled-text), var(--dark-disabled-text));
  cursor: not-allowed;
  box-shadow: none;
}

.error-message {
  color: light-dark(var(--light-error), var(--dark-error));
  margin-top: 20px;
  font-weight: 500;
  min-height: 1.5em;
}

.flashcards-container {
  display: flex;
  flex-wrap: wrap;
  gap: 25px;
  margin-top: 40px;
  justify-content: center;
  perspective: 1000px; /* Add perspective for 3D effect */
}

.flashcard {
  background-color: transparent; /* Make the outer container transparent */
  width: var(--flashcard-width);
  height: var(--flashcard-height);
  border: none; /* Remove border from outer container */
  border-radius: 10px;
  cursor: pointer;
  perspective: 1000px; /* Add perspective for 3D effect */
  box-shadow: none; /* Remove shadow from outer container */
  position: relative;
}

.flashcard-inner {
  position: relative;
  width: 100%;
  height: 100%;
  text-align: center;
  transition: transform 0.6s, box-shadow 0.2s;
  transform-style: preserve-3d;
  box-shadow: 0 1px 2px light-dark(var(--light-shadow-color-2), var(--dark-shadow-color-2)); /* Apply shadow here */
  border-radius: 10px; /* Apply border-radius here */
}

.flashcard.editing .flashcard-inner {
  transform: none; /* Prevent flipping while editing */
}

.flashcard.editing {
  cursor: default; /* Change cursor when editing */
}

.flashcard-front,
.flashcard-back {
  position: absolute;
  width: 100%;
  height: 100%;
  -webkit-backface-visibility: hidden; /* Safari */
  backface-visibility: hidden;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 20px; /* Reduced padding for content */
  box-sizing: border-box;
  border-radius: 10px; /* Match parent */
  border: 1px solid light-dark(var(--light-border), var(--dark-border)); /* Apply border here */
  background-color: light-dark(var(--light-card-bg), var(--dark-card-bg)); /* Apply background here */
  overflow: auto;
}

.flashcard-back {
  transform: rotateY(180deg);
}

.flashcard:not(.editing):hover .flashcard-inner {
  box-shadow: 0 4px 8px light-dark(var(--light-shadow-color-1), var(--dark-shadow-color-1));
}

.flashcard:not(.editing):hover .flashcard-front,
.flashcard:not(.editing):hover .flashcard-back {
   border-color: light-dark(var(--light-primary), var(--dark-primary));
}


.term {
  font-size: 1.3em; /* Adjust size */
  font-weight: 500;
  color: light-dark(var(--light-text-primary), var(--dark-text-primary));
}

.definition {
  font-size: 1.0em; /* Adjust size */
  color: light-dark(var(--light-text-secondary), var(--dark-text-secondary));
  line-height: 1.4; /* Adjust line height */
}

footer {
  margin-top: 50px;
  padding-top: 25px;
  border-top: 1px solid light-dark(var(--light-border), var(--dark-border));
  color: light-dark(var(--light-text-secondary), var(--dark-text-secondary));
  font-size: 0.9em;
  text-align: right;
}

/* New Edit Styles */
.edit-icon {
  position: absolute;
  top: 8px;
  right: 8px;
  width: 24px;
  height: 24px;
  z-index: 10;
  cursor: pointer;
  opacity: 0;
  transition: opacity 0.2s ease-in-out;
  background-color: rgba(0,0,0,0.1);
  border-radius: 50%;
  padding: 4px;
  box-sizing: border-box;
}

.flashcard:hover .edit-icon {
  opacity: 0.7;
}

.edit-icon:hover {
  opacity: 1;
}

.edit-icon svg {
  fill: light-dark(var(--light-text-secondary), var(--dark-text-secondary));
  width: 100%;
  height: 100%;
}

.edit-form {
  display: flex;
  flex-direction: column;
  gap: 5px;
  padding: 10px;
  height: 100%;
  box-sizing: border-box;
  background-color: light-dark(var(--light-card-bg), var(--dark-card-bg));
  border-radius: 10px;
  border: 1px solid light-dark(var(--light-border), var(--dark-border));
}

.edit-form textarea {
  width: calc(100% - 10px);
  padding: 5px;
  min-height: 0;
  font-size: 12px;
  flex-grow: 1;
  border-radius: 4px;
}

.edit-buttons {
  display: flex;
  justify-content: flex-end;
  gap: 5px;
}

.edit-buttons button {
  padding: 4px 8px;
  font-size: 12px;
}

/* New Map Link Styles */
.map-link {
  font-size: 0.8em;
  margin-top: 10px;
  text-decoration: underline;
  color: light-dark(var(--light-primary), var(--dark-primary));
  z-index: 5;
}

.map-link:hover {
  text-decoration: none;
}

/* New Speaker Icon Styles */
.speaker-icon {
  position: absolute;
  bottom: 10px;
  right: 10px;
  width: 24px;
  height: 24px;
  cursor: pointer;
  opacity: 0.6;
  transition: opacity 0.2s ease-in-out, transform 0.2s ease-in-out;
  z-index: 5;
}

.speaker-icon:hover {
  opacity: 1;
  transform: scale(1.1);
}

.speaker-icon svg {
  fill: light-dark(var(--light-text-secondary), var(--dark-text-secondary));
  width: 100%;
  height: 100%;
}

/* Styling for generated markdown content */
.term p,
.definition p {
  margin: 0;
  width: 100%;
}

.definition ul {
  padding-left: 20px;
  margin-top: 5px;
  margin-bottom: 5px;
  text-align: left;
  width: 100%;
}

.definition li {
  margin-bottom: 4px;
}

.definition strong,
.term strong {
  font-weight: 600; /* Bolder than 500 */
  color: light-dark(var(--light-primary), var(--dark-primary));
}

/* Zoom Overlay Styles */
#zoomOverlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.7);
  z-index: 1000;
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.3s ease-in-out;
}

#zoomOverlay.visible {
  opacity: 1;
  pointer-events: auto;
}

#zoomOverlay .flashcard {
  width: 90vw;
  max-width: 600px;
  height: 80vh;
  max-height: 700px;
  cursor: default;
  transform: scale(0.95);
  transition: transform 0.3s ease-in-out;
}

#zoomOverlay.visible .flashcard {
  transform: scale(1);
}

#zoomOverlay .flashcard .flashcard-inner {
  transform: none;
}

#zoomOverlay .flashcard .flashcard-front {
  display: none;
}

#zoomOverlay .flashcard .flashcard-back {
  transform: none;
  display: flex;
  justify-content: flex-start;
  align-items: flex-start;
  text-align: left;
}

#zoomOverlay .flashcard .edit-icon {
  display: none;
}

/* API Key Modal Styles */
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.6);
  z-index: 2000;
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.3s ease-in-out;
}

.modal-overlay.visible {
  opacity: 1;
  pointer-events: auto;
}

.modal-content {
  background-color: light-dark(var(--light-surface), var(--dark-surface));
  padding: 30px 40px;
  border-radius: 12px;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
  width: 90%;
  max-width: 500px;
  text-align: center;
  position: relative;
  transform: scale(0.95);
  transition: transform 0.3s ease-in-out;
}

.modal-overlay.visible .modal-content {
  transform: scale(1);
}

.modal-content h2 {
  color: light-dark(var(--light-primary), var(--dark-primary));
  margin-top: 0;
  margin-bottom: 15px;
  font-size: 1.8em;
}

.modal-content p {
  margin-bottom: 25px;
  color: light-dark(var(--light-text-secondary), var(--dark-text-secondary));
  line-height: 1.6;
}

.modal-content a {
  color: light-dark(var(--light-primary), var(--dark-primary));
  text-decoration: none;
  font-weight: 500;
}
.modal-content a:hover {
  text-decoration: underline;
}

.input-group {
  margin-bottom: 20px;
  position: relative;
}

.input-group label.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.input-group input {
  width: calc(100% - 32px);
  padding: 15px;
  border: 1px solid light-dark(var(--light-border), var(--dark-border));
  border-radius: 8px;
  font-size: 16px;
  background-color: light-dark(var(--light-bg), var(--dark-card-bg));
  color: light-dark(var(--light-text-primary), var(--dark-text-primary));
  transition: border-color 0.3s ease, box-shadow 0.3s ease;
}

.input-group input:focus {
  outline: none;
  border-color: light-dark(var(--light-primary), var(--dark-primary));
  box-shadow: 0 0 0 2px light-dark(var(--light-focus-shadow-color), var(--dark-focus-shadow-color));
}

.modal-buttons {
  display: flex;
  justify-content: center;
}

.modal-content .error-message {
  margin-top: -10px;
  margin-bottom: 15px;
}

.close-button {
  position: absolute;
  top: 10px;
  right: 10px;
  background: transparent;
  border: none;
  font-size: 2rem;
  line-height: 1;
  color: light-dark(var(--light-text-secondary), var(--dark-text-secondary));
  cursor: pointer;
  padding: 5px;
  opacity: 0.7;
  transition: opacity 0.2s, color 0.2s;
}
.close-button:hover {
  opacity: 1;
  color: light-dark(var(--light-text-primary), var(--dark-text-primary));
}